@model ZonaTecnologica.Vusuario

@{
    ViewBag.Title = "Create";
}
@{
    if (!string.IsNullOrEmpty(ViewBag.Message))
    {
        <div class="alert alert-danger">@ViewBag.Message</div>
    }
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Crear</title>
    
</head>
<body>


    @using (Html.BeginForm("Create", "Usuario", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Usuarios</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.primer_nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.primer_nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.primer_nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.segundo_nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.segundo_nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.segundo_nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.primer_apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.primer_apellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.primer_apellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.segundo_apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.segundo_apellido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.segundo_apellido, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">Elija un rol</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.id_rol, new SelectList(ViewBag.Rol, "id_rol", "rol"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_rol, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.foto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img id="blah" src="#" class="img-fluid img-thumbnail imagen-escondida" alt="Eniun" style="width: 30%; height: auto; display: none" />
                @Html.TextBox("img", null, new { type = "file", @class = "form-control", accept = "image/png, .jpeg, .jpg, image/gif" })
                @Html.ValidationMessageFor(model => model.foto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a class="btn btn-default" href='@Url.Action("index", "Usuario")'>Regresar</a> |
                <input type="submit" value="Crear" class="btn btn-default" />

            </div>
        </div>
    </div>
    }

</body>
</html>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>
    function readURL(input) {


        var blahh = document.getElementById('blah');
        blahh.style.display = 'none';


        if (input.files && input.files[0]) { //Revisamos que el input tenga contenido

            var reader = new FileReader(); //Leemos el contenido

            blahh.style.display = 'block';

            reader.onload = function (e) { //Al cargar el contenido lo pasamos como atributo de la imagen de arriba
                $('#blah').attr('src', e.target.result);
            }

            reader.readAsDataURL(input.files[0]);
            $("#imagen").css('display', 'none');
        }



    }

    $("#img").change(function () { //Cuando el input cambie (se cargue un nuevo archivo) se va a ejecutar de nuevo el cambio de imagen y se verá reflejado.
        readURL(this);
    });

</script>